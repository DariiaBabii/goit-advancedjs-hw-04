(function(){const r=document.createElement("link").relList;if(r&&r.supports&&r.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))n(e);new MutationObserver(e=>{for(const o of e)if(o.type==="childList")for(const a of o.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&n(a)}).observe(document,{childList:!0,subtree:!0});function t(e){const o={};return e.integrity&&(o.integrity=e.integrity),e.referrerPolicy&&(o.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?o.credentials="include":e.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function n(e){if(e.ep)return;e.ep=!0;const o=t(e);fetch(e.href,o)}})();const g="https://pixabay.com/api/",h=40;async function u(s,r){try{return await axios.get(g,{params:{key:"44570519-7c0b61377156fc3d5e2c8fcbc",q:s,image_type:"photo",orientation:"horizontal",safesearch:"true",per_page:h,page:r}})}catch(t){throw console.error("Error fetching images:",t),t}}const b=document.querySelector(".gallery");function d(s){const r=s.map(({webformatURL:t,largeImageURL:n,tags:e,likes:o,views:a,comments:y,downloads:p})=>`
       <a href="${n}" class="card-link">
          <div class="photo-card">
            <img src="${t}" alt="${e}" loading="lazy" class="image" />
        <div class="info">
          <p class="info-item"><b>Likes</b>${o}</p>
          <p class="info-item"><b>Views</b>${a}</p>
          <p class="info-item"><b>Comments</b>${y}</p>
          <p class="info-item"><b>Downloads</b>${p}</p>
        </div>
      </div>
      </a>`).join("");b.insertAdjacentHTML("beforeend",r)}const v=document.querySelector(".search-form"),i=document.querySelector(".load-more"),L=document.querySelector(".gallery"),l=document.querySelector('input[name="searchQuery"]'),S=document.querySelector('button[type="submit"]');v.addEventListener("submit",q,!1);l.addEventListener("input",E,!1);i.addEventListener("click",w);let c=1;const m=new SimpleLightbox(".gallery a",{});async function q(s){s.preventDefault(),c=1,L.innerHTML="";const r=l.value;i.style.display="none";try{const t=await u(r,c),{hits:n,totalHits:e}=t.data;if(n.length===0){iziToast.error({title:"Error",message:"Sorry, there are no images matching your search query. Please try again."});return}d(n),m.refresh(),iziToast.success({title:"Success",message:`Hooray! We found ${e} images.`}),i.style.display="block",f()}catch(t){iziToast.error({title:"Error",message:"Failed to fetch images. Please try again later."}),console.error(t)}}async function w(){c++;const s=l.value;try{const r=await u(s,c),{hits:t}=r.data;d(t),m.refresh(),t.length<40&&(iziToast.info({title:"Info",message:"We're sorry, but you've reached the end of search results."}),i.style.display="none"),f()}catch(r){iziToast.error({title:"Error",message:"Failed to load more images. Please try again later."}),console.error("Error in onLoadMore:",r)}}function f(){const{height:s}=document.querySelector(".gallery").firstElementChild.getBoundingClientRect();window.scrollBy({top:s*2,behavior:"smooth"})}function E(){S.disabled=l.value.trim()===""}
//# sourceMappingURL=commonHelpers.js.map
